// version: 1.1-SNAPSHOT, chiselVersion: 3.5-SNAPSHOT, for more information, visit https://github.com/easysoc/layered-firrtl
algorithm: layered
hierarchyHandling: INCLUDE_CHILDREN

node GCD {
    portConstraints: FIXED_SIDE
    nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
    nodeSize.constraints: "PORTS PORT_LABELS NODE_LABELS"
    label "GCD"
    
    port clock {
        ^port.side: WEST
        label "clock"
    }
    port reset {
        ^port.side: WEST
        label "reset"
    }
    port io_value1 {
        ^port.side: WEST
        label "io_value1"
    }
    port io_value2 {
        ^port.side: WEST
        label "io_value2"
    }
    port io_loadingValues {
        ^port.side: WEST
        label "io_loadingValues"
    }
    port io_outputGCD {
        ^port.side: EAST
        label "io_outputGCD"
    }
    port io_outputValid {
        ^port.side: EAST
        label "io_outputValid"
    }
    node x {
        layout [ size: 30, 40 ]
        portConstraints: FIXED_SIDE
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        label "x"
        label "reg" { nodeLabels.placement: "H_LEFT V_CENTER INSIDE" }
        port in {
            ^port.side: "WEST"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node y {
        layout [ size: 30, 40 ]
        portConstraints: FIXED_SIDE
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        label "y"
        label "reg" { nodeLabels.placement: "H_LEFT V_CENTER INSIDE" }
        port in {
            ^port.side: "WEST"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node gt_1 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "gt"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node sub_2 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "sub"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node tail_3 {
        layout [ size: 20, 40 ]
        portConstraints: FIXED_SIDE
        nodeLabels.placement: "H_LEFT V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "tail"
        port in1 {
            ^port.side: "WEST"
        }
        port in2 {
            ^port.side: "WEST"
            label "1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node sub_4 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "sub"
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node tail_5 {
        layout [ size: 20, 40 ]
        portConstraints: FIXED_SIDE
        nodeLabels.placement: "H_LEFT V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "tail"
        port in1 {
            ^port.side: "WEST"
        }
        port in2 {
            ^port.side: "WEST"
            label "1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node mux_1 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "mux"
        port select {
            ^port.side: "WEST"
            label "sel"
        }
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node mux_2 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "mux"
        port select {
            ^port.side: "WEST"
            label "sel"
        }
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node mux_3 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "mux"
        port select {
            ^port.side: "WEST"
            label "sel"
        }
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node mux_4 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "mux"
        port select {
            ^port.side: "WEST"
            label "sel"
        }
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node eq_6 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "eq"
        port in2 {
            ^port.side: "WEST"
            label "0"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node mux_5 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "mux"
        port select {
            ^port.side: "WEST"
            label "sel"
        }
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node lit7 {
        nodeLabels.placement: "H_CENTER V_CENTER INSIDE"
        nodeSize.constraints: "NODE_LABELS"
        label "0"
    }
    node mux_6 {
        layout [ size: 32, 56 ]
        portConstraints: FIXED_ORDER
        nodeLabels.placement: "H_CENTER V_TOP OUTSIDE"
        portLabels.placement: "INSIDE"
        label "mux"
        port select {
            ^port.side: "WEST"
            label "sel"
        }
        port in2 {
            ^port.side: "WEST"
            label "in2"
        }
        port in1 {
            ^port.side: "WEST"
            label "in1"
        }
        port out {
            ^port.side: "EAST"
        }
    }
    node lit8 {
        nodeLabels.placement: "H_CENTER V_CENTER INSIDE"
        nodeSize.constraints: "NODE_LABELS"
        label "0"
    }
    edge e11 : mux_5.out -> GCD.x.in
    edge e12 : GCD.x.out -> GCD.io_outputGCD
    edge e13 : GCD.y.out -> sub_4.in1
    edge e14 : mux_1.out -> mux_3.in2
    edge e15 : eq_6.out -> GCD.io_outputValid
    edge e16 : GCD.io_loadingValues -> mux_4.select
    edge e17 : GCD.y.out -> mux_2.in1
    edge e18 : sub_2.out -> tail_3.in1
    edge e19 : GCD.lit8 -> mux_6.in1
    edge e20 : GCD.y.out -> sub_2.in2
    edge e21 : GCD.y.out -> gt_1.in2
    edge e22 : GCD.y.out -> eq_6.in1
    edge e23 : mux_2.out -> mux_4.in2
    edge e24 : GCD.io_loadingValues -> mux_3.select
    edge e25 : GCD.io_value1 -> mux_3.in1
    edge e26 : mux_6.out -> GCD.y.in
    edge e27 : mux_3.out -> mux_5.in2
    edge e28 : sub_4.out -> tail_5.in1
    edge e29 : GCD.x.out -> sub_2.in1
    edge e30 : GCD.x.out -> mux_1.in2
    edge e31 : GCD.x.out -> gt_1.in1
    edge e32 : gt_1.out -> mux_2.select
    edge e33 : GCD.reset -> mux_6.select
    edge e34 : GCD.x.out -> sub_4.in2
    edge e35 : tail_5.out -> mux_2.in2
    edge e36 : GCD.io_value2 -> mux_4.in1
    edge e37 : mux_4.out -> mux_6.in2
    edge e38 : gt_1.out -> mux_1.select
    edge e39 : tail_3.out -> mux_1.in1
    edge e40 : GCD.lit7 -> mux_5.in1
    edge e41 : GCD.reset -> mux_5.select
    
}

